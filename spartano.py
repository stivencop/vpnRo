#!/usr/bin/python
import base64

BRANCO='\033[1;29m'
NADA='\033[0m'
CINZA='\033[02;37m'
DESTACAR='\033[01;37m'
RED='\033[1;31m'
AZUL='\033[36m'
GREEN='\033[1;32m'
YELLOW='\033[1;33m'
AMARELO='\033[33m'
SCOLOR='\033[0m'
SEMCOR='\033[8m'
BrancoAll='\033[03;37;47m'
LETRAPRETA='\033[02;30;47m'
PURPULA='\033[35m'

OLAMAE =f"„Ö§Ôæ†„Ö§‚£ø‚£ø‚£ø‚£ø‚£ø‚†Å‚¢∞‚†Ç‚†ê‚†ã‚†ä‚†Ñ‚†Ç‚¢∞‚£Ü‚†Ñ‚†Ç‚†§‚†Ñ‚°®‚°Ä‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚††‚††\nÔæ†„Ö§„Ö§‚£ø‚£ø‚£ø‚£ø‚£ø‚†á‚†Ñ‚†à‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚¢∏‚£ø‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Å‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚††\n„Ö§„Ö§Ôæ†‚£ø‚£ø‚£ø‚£ø‚°ü‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚°Ä‚°Ñ‚††‚¢Ä‚£§‚£ø‚£ø‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚¢ê‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚††\n„Ö§„Ö§Ôæ†‚£ø‚£ø‚£ø‚£ø‚†Å‚†Ñ‚†∏‚†Ñ‚†Ñ‚¢ø‚£∑‚£¨‚£ø‚£ø‚£ø‚£ø‚£Ä‚£π‚°§‚°Ä‚†Ñ‚¢∞‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚††\n„Ö§„Ö§Ôæ†‚£ø‚£ø‚£ø‚†á‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†ò‚£ø‚£ø‚£ø‚°ø‚¢º‚£ø‚£ø‚£ø‚†Å‚†Ñ‚†Ñ‚¢∏‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚††\n„Ö§„Ö§Ôæ†‚£ø‚£ø‚†è‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†à‚†ª‚£ø‚£Ü‚£æ‚°ø‚†õ‚†Å‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚°Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚††\n„Ö§„Ö§Ôæ†‚£ø‚°è‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†à‚†õ‚†Å‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚¢É‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ \n„Ö§„Ö§Ôæ†‚°ü‚†Ñ‚£Ä‚£§‚£§‚£Ñ‚†Ñ‚£†‚£Ä‚£Ä‚£Ä‚£Ä‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚°Ä‚†Ñ‚£Ä‚£Ä‚£ò‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ \n„Ö§„Ö§Ôæ†‚†Ñ‚£æ‚£ø‚£ø‚£ø‚°ü‚¢∞‚£ø‚£ø‚£ø‚£ø‚£∑‚£∑‚£∂‚£ø‚£æ‚£ø‚£ø‚°á‚¢ª‚£ø‚£ø‚£ø‚£ø‚°Ñ‚†Ñ‚†Ñ‚†Ñ \n„Ö§„Ö§Ôæ†‚†Ñ‚£ø‚£ø‚£ø‚°è‚†É‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£å‚¢ü‚°Ø‚°ü‚£ø‚£∑‚†Ñ‚†Ñ‚†Ñ \n„Ö§„Ö§Ôæ†‚†Ñ‚¢π‚£ø‚£ø‚¢Å‚£∞‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∂‚£¶‚£ú‚†ø‚†Ç‚†Ñ‚†Ñ \n„Ö§„Ö§Ôæ†‚†Ñ‚†Ñ‚¢ø‚†á‚£º‚£ø‚£ø‚¢ø‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ø‚°∑‚°Ä‚†Ñ‚†Ñ \n„Ö§„Ö§Ôæ†‚†Ñ‚†Ñ‚†ò‚¢ê‚£ø‚£ø‚†Ñ‚†Ñ‚¢Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°Ä‚†Ñ‚¢∞‚†ò‚°Ä \n„Ö§„Ö§Ôæ†‚†Ñ‚†Ñ‚†Ñ‚¢∏‚£ø‚£ø‚£∑‚£∂‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚¢ª‚£ü‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£æ‚£ø‚†Ñ‚†Ñ \n„Ö§„Ö§Ôæ†‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚£ª‚£ø‚£ü‚£æ‚†ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†É‚††‚†Ñ \n„Ö§„Ö§Ôæ†‚¢Ä‚¢ê‚°Ä‚£§‚£§‚£¨‚£ù‚£õ‚£ª‚£ü‚£ø‚¢≠‚£ø‚£ø‚°ø‚£ø‚£ø‚£ø‚£Æ‚£º‚£ü‚†ª‚£ø‚°ù‚†Ñ‚†Ñ‚†Ñ‚††"
def linha():
    print('üêù'*26)


def ssl():
    ssl = nm+"!!!!"+tp+"!!!!GET / HTTP/1.1[crlf]Host: "+dm+"[crlf]Upgrade: ws[crlf][crlf]!!!!"+pxy+"!!!!"+dnP+"!!!!"+dnS+"!!!!!!!!"+pt+"!!!!0!!!!0!!!!"+tg+"!!!!1!!!!1!!!!!!!!!!!!"+si+"!!!!127.0.0.1:"+udp+"(((((("
    return(ssl)


def web():
    web = nm+"!!!!"+tp+"!!!!GET / HTTP/1.1[crlf]Host:"+dm+"[crlf]Upgrade: ws[crlf][crlf]!!!!"+pxy+"!!!!"+dnP+"!!!!"+dnS+"!!!!!!!!"+pt+"!!!!0!!!!0!!!!"+tg+"!!!!1!!!!1!!!!!!!!!!!!"+si+"!!!!127.0.0.1:"+udp+"(((((("
    return(web)


def pay():
    pay = nm+"!!!!"+tp+"!!!!GET wss//"+si+" HTTP/1.1[crlf]Host: "+dm+"[crlf]Upgrade: ws[crlf][crlf]!!!!"+pxy+"!!!!"+dnP+"!!!!"+dnS+"!!!!!!!!"+pt+"!!!!0!!!!0!!!!"+tg+"!!!!1!!!!1!!!!!!!!!!!!"+si+"!!!!127.0.0.1:"+udp+"(((((("
    return(pay)


def custom():
    custom =  nm+"!!!!"+tp+"!!!!"+csm+"!!!!"+pxy+"!!!!"+dnP+"!!!!"+dnS+"!!!!!!!!"+pt+"!!!!0!!!!0!!!!"+tg+"!!!!1!!!!1!!!!!!!!!!!!"+si+"!!!!127.0.0.1:"+udp+"(((((("
    return(custom)
    
print(f"{OLAMAE}")
while True:
    csm = str(input(f"{GREEN}Coloque Su Payload Personalizado:{YELLOW} "))
    nm = str(input(f"{GREEN}Coloque El Nombre De Su Operadora:{YELLOW} "))
    linha()
    dm = str(input(f"{GREEN}Coloque Su Dominio:{YELLOW} "))
    linha()
    si = str(input(f"{GREEN}Coloque un SNI / Bughost:{YELLOW} "))
    linha()
    udp = str(input(f"{GREEN}Digite un puerto UDP, juegos, streaming:{YELLOW} "))
    linha()
    pt = str(input(f"{GREEN}Digite Un Puerto Proxy{YELLOW}: "))
    linha()
    pxy = str(input(f"{GREEN}Coleque El Proxy:{YELLOW} "))
    linha()
    dnP = str(input(f"{GREEN}Digite un DNS Prim√°rio v√°lido:{YELLOW} "))
    linha()
    dnS = str(input(f"{GREEN}Digite un DNS Secund√°rio v√°lido:{YELLOW} "))
    linha()
    tp = str(input(f"{GREEN}D√™ un nombre pro Tipo de Payload:{YELLOW} "))
    linha()
    tg = str(input(f"{GREEN}Digite una bandera, ejemplo: br, usa :{YELLOW} "))
    

    key = "((((((######0######0######--------AtlantusFree@@@@@@@@@@@@"

    gerar = int(input(f"""
   {DESTACAR}[ 1 ]{AZUL} {AZUL}Generar Payload Mod Spartano{AZUL}

   {DESTACAR}[ 2 ]{AZUL} {PURPULA}Generar Payload Normal, varia{AZUL}

    """))
    if gerar == 1:
        while True:                                                                                 
            menu = int(input(f"""
{DESTACAR}[ ùüô ]{AZUL} {PURPULA}Generar Con Su Payload Personalizado{AZUL}
{DESTACAR}[ ùüö ]{AZUL} {RED}generar SSL normal{AZUL}
{DESTACAR}[ ùüõ ]{AZUL} {AZUL}Generar WebSocket Direct{AMARELO} 
{DESTACAR}[ ùüú ]{AZUL} {AMARELO}Generar SSL + Payload{PURPULA} 
{DESTACAR}[ ùüù ]{AZUL} {GREEN}Cuando Tengas Texto Generado Colocalo Aqui{YELLOW}
{DESTACAR}[ ùüû ]{AZUL} {CINZA}Volver{AZUL}
"""))
            if menu == 1:
                q = int(input('Cuantas Quieres Generar? '))
                m = q * custom()
                chave = "######"+nm+"!!!!1"
                print(m+chave+key, sep='')
            if menu == 2:
                q = int(input('Cuantas Quieres Generar? '))
                m = q * ssl()
                chave = "######"+nm+"!!!!1"
                print(m+chave+key)
            elif menu == 3:
                q = int(input('Cuantas Quieres Generar? '))
                m = q * web()
                chave = "######"+nm+"!!!!1"
                print(m+chave+key)
            elif menu == 4:
                q = int(input('Cuantas Quieres Generar? '))
                m = q * pay()
                chave = "######"+nm+"!!!!1"
                print(m+chave+key)
            elif menu == 5:
                dados = str(input(f'{AMARELO}Coloque aqui su texto generado para encriptarlo y subir al arquivo al sitio de atualizacion{GREEN}:{DESTACAR}{AZUL}'))
                valor = base64.b64encode(dados.encode('utf-8'))
                print(valor[::-1])
            elif menu == 6:
                break